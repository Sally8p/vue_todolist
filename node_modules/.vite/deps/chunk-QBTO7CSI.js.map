{
  "version": 3,
  "sources": ["../../vuetify/src/composables/layout.ts"],
  "sourcesContent": ["// Composables\nimport { useResizeObserver } from '@/composables/resizeObserver'\n\n// Utilities\nimport {\n  computed,\n  inject,\n  nextTick,\n  onActivated,\n  onBeforeUnmount,\n  onDeactivated,\n  provide,\n  reactive,\n  ref,\n  shallowRef,\n} from 'vue'\nimport { convertToUnit, eagerComputed, findChildrenWithProvide, getCurrentInstance, getUid, propsFactory } from '@/util'\n\n// Types\nimport type { ComponentInternalInstance, CSSProperties, InjectionKey, Prop, Ref } from 'vue'\n\nexport type Position = 'top' | 'left' | 'right' | 'bottom'\n\ninterface Layer {\n  top: number\n  bottom: number\n  left: number\n  right: number\n}\n\ninterface LayoutItem extends Layer {\n  id: string\n  size: number\n  position: Position\n}\n\ninterface LayoutProvide {\n  register: (\n    vm: ComponentInternalInstance,\n    options: {\n      id: string\n      order: Ref<number>\n      position: Ref<Position>\n      layoutSize: Ref<number | string>\n      elementSize: Ref<number | string | undefined>\n      active: Ref<boolean>\n      disableTransitions?: Ref<boolean>\n      absolute: Ref<boolean | undefined>\n    }\n  ) => {\n    layoutItemStyles: Ref<CSSProperties>\n    layoutItemScrimStyles: Ref<CSSProperties>\n    zIndex: Ref<number>\n  }\n  unregister: (id: string) => void\n  mainRect: Ref<Layer>\n  mainStyles: Ref<CSSProperties>\n  getLayoutItem: (id: string) => LayoutItem | undefined\n  items: Ref<LayoutItem[]>\n  layoutRect: Ref<DOMRectReadOnly | undefined>\n  rootZIndex: Ref<number>\n  layoutIsReady: Promise<void>\n}\n\nexport const VuetifyLayoutKey: InjectionKey<LayoutProvide> = Symbol.for('vuetify:layout')\nexport const VuetifyLayoutItemKey: InjectionKey<{ id: string }> = Symbol.for('vuetify:layout-item')\n\nconst ROOT_ZINDEX = 1000\n\nexport const makeLayoutProps = propsFactory({\n  overlaps: {\n    type: Array,\n    default: () => ([]),\n  } as Prop<string[]>,\n  fullHeight: Boolean,\n}, 'layout')\n\n// Composables\nexport const makeLayoutItemProps = propsFactory({\n  name: {\n    type: String,\n  },\n  order: {\n    type: [Number, String],\n    default: 0,\n  },\n  absolute: Boolean,\n}, 'layout-item')\n\nexport function useLayout () {\n  const layout = inject(VuetifyLayoutKey)\n\n  if (!layout) throw new Error('[Vuetify] Could not find injected layout')\n\n  const layoutIsReady = nextTick()\n\n  return {\n    layoutIsReady,\n    getLayoutItem: layout.getLayoutItem,\n    mainRect: layout.mainRect,\n    mainStyles: layout.mainStyles,\n  }\n}\n\nexport function useLayoutItem (options: {\n  id: string | undefined\n  order: Ref<number>\n  position: Ref<Position>\n  layoutSize: Ref<number | string>\n  elementSize: Ref<number | string | undefined>\n  active: Ref<boolean>\n  disableTransitions?: Ref<boolean>\n  absolute: Ref<boolean | undefined>\n}) {\n  const layout = inject(VuetifyLayoutKey)\n\n  if (!layout) throw new Error('[Vuetify] Could not find injected layout')\n\n  const id = options.id ?? `layout-item-${getUid()}`\n\n  const vm = getCurrentInstance('useLayoutItem')\n\n  provide(VuetifyLayoutItemKey, { id })\n\n  const isKeptAlive = shallowRef(false)\n  onDeactivated(() => isKeptAlive.value = true)\n  onActivated(() => isKeptAlive.value = false)\n\n  const layoutIsReady = nextTick()\n\n  const {\n    layoutItemStyles,\n    layoutItemScrimStyles,\n  } = layout.register(vm, {\n    ...options,\n    active: computed(() => isKeptAlive.value ? false : options.active.value),\n    id,\n  })\n\n  onBeforeUnmount(() => layout.unregister(id))\n\n  return { layoutItemStyles, layoutRect: layout.layoutRect, layoutItemScrimStyles, layoutIsReady }\n}\n\nconst generateLayers = (\n  layout: string[],\n  positions: Map<string, Ref<Position>>,\n  layoutSizes: Map<string, Ref<number | string>>,\n  activeItems: Map<string, Ref<boolean>>,\n): { id: string, layer: Layer }[] => {\n  let previousLayer: Layer = { top: 0, left: 0, right: 0, bottom: 0 }\n  const layers = [{ id: '', layer: { ...previousLayer } }]\n  for (const id of layout) {\n    const position = positions.get(id)\n    const amount = layoutSizes.get(id)\n    const active = activeItems.get(id)\n    if (!position || !amount || !active) continue\n\n    const layer = {\n      ...previousLayer,\n      [position.value]: parseInt(previousLayer[position.value], 10) + (active.value ? parseInt(amount.value, 10) : 0),\n    }\n\n    layers.push({\n      id,\n      layer,\n    })\n\n    previousLayer = layer\n  }\n\n  return layers\n}\n\nexport function createLayout (props: { overlaps?: string[], fullHeight?: boolean }) {\n  const parentLayout = inject(VuetifyLayoutKey, null)\n  const rootZIndex = computed(() => parentLayout ? parentLayout.rootZIndex.value - 100 : ROOT_ZINDEX)\n  const registered = ref<string[]>([])\n  const positions = reactive(new Map<string, Ref<Position>>())\n  const layoutSizes = reactive(new Map<string, Ref<number | string>>())\n  const priorities = reactive(new Map<string, Ref<number>>())\n  const activeItems = reactive(new Map<string, Ref<boolean>>())\n  const disabledTransitions = reactive(new Map<string, Ref<boolean>>())\n  const { resizeRef, contentRect: layoutRect } = useResizeObserver()\n\n  const layers = eagerComputed(() => {\n    const uniquePriorities = [...new Set([...priorities.values()].map(p => p.value))].sort((a, b) => a - b)\n    const layout = []\n    for (const p of uniquePriorities) {\n      const items = registered.value.filter(id => priorities.get(id)?.value === p)\n      layout.push(...items)\n    }\n    return generateLayers(layout, positions, layoutSizes, activeItems)\n  })\n\n  const transitionsEnabled = computed(() => {\n    return !Array.from(disabledTransitions.values()).some(ref => ref.value)\n  })\n\n  const mainRect = computed(() => {\n    return layers.value[layers.value.length - 1].layer\n  })\n\n  const mainStyles = computed<CSSProperties>(() => {\n    return {\n      '--v-layout-left': convertToUnit(mainRect.value.left),\n      '--v-layout-right': convertToUnit(mainRect.value.right),\n      '--v-layout-top': convertToUnit(mainRect.value.top),\n      '--v-layout-bottom': convertToUnit(mainRect.value.bottom),\n      ...(transitionsEnabled.value ? undefined : { transition: 'none' }),\n    }\n  })\n\n  const items = eagerComputed(() => {\n    return layers.value.slice(1).map(({ id }, index) => {\n      const { layer } = layers.value[index]\n      const size = layoutSizes.get(id)\n      const position = positions.get(id)\n\n      return {\n        id,\n        ...layer,\n        size: Number(size!.value),\n        position: position!.value,\n      }\n    })\n  })\n\n  const getLayoutItem = (id: string) => {\n    return items.value.find(item => item.id === id)\n  }\n\n  const rootVm = getCurrentInstance('createLayout')\n\n  const layoutIsReady = nextTick()\n\n  provide(VuetifyLayoutKey, {\n    register: (\n      vm: ComponentInternalInstance,\n      {\n        id,\n        order,\n        position,\n        layoutSize,\n        elementSize,\n        active,\n        disableTransitions,\n        absolute,\n      }\n    ) => {\n      priorities.set(id, order)\n      positions.set(id, position)\n      layoutSizes.set(id, layoutSize)\n      activeItems.set(id, active)\n      disableTransitions && disabledTransitions.set(id, disableTransitions)\n\n      const instances = findChildrenWithProvide(VuetifyLayoutItemKey, rootVm?.vnode)\n      const instanceIndex = instances.indexOf(vm)\n\n      if (instanceIndex > -1) registered.value.splice(instanceIndex, 0, id)\n      else registered.value.push(id)\n\n      const index = computed(() => items.value.findIndex(i => i.id === id))\n      const zIndex = computed(() => rootZIndex.value + (layers.value.length * 2) - (index.value * 2))\n\n      const layoutItemStyles = computed<CSSProperties>(() => {\n        const isHorizontal = position.value === 'left' || position.value === 'right'\n        const isOppositeHorizontal = position.value === 'right'\n        const isOppositeVertical = position.value === 'bottom'\n        const size = elementSize.value ?? layoutSize.value\n        const unit = size === 0 ? '%' : 'px'\n\n        const styles = {\n          [position.value]: 0,\n          zIndex: zIndex.value,\n          transform: `translate${isHorizontal ? 'X' : 'Y'}(${(active.value ? 0 : -(size === 0 ? 100 : size)) * (isOppositeHorizontal || isOppositeVertical ? -1 : 1)}${unit})`,\n          position: absolute.value || rootZIndex.value !== ROOT_ZINDEX ? 'absolute' : 'fixed',\n          ...(transitionsEnabled.value ? undefined : { transition: 'none' }),\n        } as const\n\n        if (index.value < 0) throw new Error(`Layout item \"${id}\" is missing`)\n\n        const item = items.value[index.value]\n\n        if (!item) throw new Error(`[Vuetify] Could not find layout item \"${id}\"`)\n\n        return {\n          ...styles,\n          height:\n            isHorizontal ? `calc(100% - ${item.top}px - ${item.bottom}px)`\n            : elementSize.value ? `${elementSize.value}px`\n            : undefined,\n          left: isOppositeHorizontal ? undefined : `${item.left}px`,\n          right: isOppositeHorizontal ? `${item.right}px` : undefined,\n          top: position.value !== 'bottom' ? `${item.top}px` : undefined,\n          bottom: position.value !== 'top' ? `${item.bottom}px` : undefined,\n          width:\n            !isHorizontal ? `calc(100% - ${item.left}px - ${item.right}px)`\n            : elementSize.value ? `${elementSize.value}px`\n            : undefined,\n        }\n      })\n\n      const layoutItemScrimStyles = computed<CSSProperties>(() => ({\n        zIndex: zIndex.value - 1,\n      }))\n\n      return { layoutItemStyles, layoutItemScrimStyles, zIndex }\n    },\n    unregister: (id: string) => {\n      priorities.delete(id)\n      positions.delete(id)\n      layoutSizes.delete(id)\n      activeItems.delete(id)\n      disabledTransitions.delete(id)\n      registered.value = registered.value.filter(v => v !== id)\n    },\n    mainRect,\n    mainStyles,\n    getLayoutItem,\n    items,\n    layoutRect,\n    rootZIndex,\n    layoutIsReady,\n  })\n\n  const layoutClasses = computed(() => [\n    'v-layout',\n    { 'v-layout--full-height': props.fullHeight },\n  ])\n\n  const layoutStyles = computed(() => ({\n    zIndex: parentLayout ? rootZIndex.value : undefined,\n    position: parentLayout ? 'relative' as const : undefined,\n    overflow: parentLayout ? 'hidden' : undefined,\n  }))\n\n  return {\n    layoutClasses,\n    layoutStyles,\n    getLayoutItem,\n    items,\n    layoutRect,\n    layoutIsReady,\n    layoutRef: resizeRef,\n  }\n}\n"],
  "mappings": "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",
  "names": ["VuetifyLayoutKey", "Symbol", "for", "VuetifyLayoutItemKey", "ROOT_ZINDEX", "makeLayoutProps", "propsFactory", "overlaps", "type", "Array", "default", "fullHeight", "Boolean", "makeLayoutItemProps", "name", "String", "order", "Number", "absolute", "useLayout", "layout", "inject", "Error", "layoutIsReady", "nextTick", "getLayoutItem", "mainRect", "mainStyles", "generateLayers", "layout", "positions", "layoutSizes", "activeItems", "previousLayer", "top", "left", "right", "bottom", "layers", "id", "layer", "position", "get", "amount", "active", "value", "parseInt", "push", "createLayout", "props", "parentLayout", "inject", "VuetifyLayoutKey", "rootZIndex", "computed", "ROOT_ZINDEX", "registered", "ref", "reactive", "Map", "priorities", "disabledTransitions", "resizeRef", "contentRect", "layoutRect", "useResizeObserver", "eagerComputed", "uniquePriorities", "Set", "values", "map", "p", "sort", "a", "b", "items", "filter", "transitionsEnabled", "Array", "from", "some", "mainRect", "length", "mainStyles", "convertToUnit", "undefined", "transition", "slice", "_ref", "index", "size", "Number", "getLayoutItem", "find", "item", "rootVm", "getCurrentInstance", "layoutIsReady", "nextTick", "provide", "register", "vm", "_ref2", "order", "layoutSize", "elementSize", "disableTransitions", "absolute", "set", "instances", "findChildrenWithProvide", "VuetifyLayoutItemKey", "vnode", "instanceIndex", "indexOf", "splice", "findIndex", "i", "zIndex", "layoutItemStyles", "isHorizontal", "isOppositeHorizontal", "isOppositeVertical", "unit", "styles", "transform", "Error", "height", "width", "layoutItemScrimStyles", "unregister", "delete", "v", "layoutClasses", "fullHeight", "layoutStyles", "overflow", "layoutRef"]
}
